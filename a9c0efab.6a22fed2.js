(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{186:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return c}));var a=n(1),r=n(9),i=(n(0),n(221)),o={id:"web",title:"Web"},s={id:"web",title:"Web",description:"To render a game for the browser use the `@replay/web` package.",source:"@site/docs/web.md",permalink:"/docs/web",editUrl:"https://github.com/edbentley/replay/edit/master/website/docs/web.md",sidebar:"someSidebar",previous:{title:"Replay Test",permalink:"/docs/test"},next:{title:"iOS",permalink:"/docs/ios"}},l=[{value:"<code>renderCanvas(game, loadingTextures, assets, dimensions, nativeSpriteMap, canvas, windowSize)</code>",id:"rendercanvasgame-loadingtextures-assets-dimensions-nativespritemap-canvas-windowsize",children:[]},{value:"<code>mapInputCoordinates(getLocalCoords, inputs)</code>",id:"mapinputcoordinatesgetlocalcoords-inputs",children:[]},{value:"Inputs",id:"inputs",children:[]}],p={rightToc:l};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"To render a game for the browser use the ",Object(i.b)("inlineCode",{parentName:"p"},"@replay/web")," package."),Object(i.b)("h3",{id:"rendercanvasgame-loadingtextures-assets-dimensions-nativespritemap-canvas-windowsize"},Object(i.b)("inlineCode",{parentName:"h3"},"renderCanvas(game, loadingTextures, assets, dimensions, nativeSpriteMap, canvas, windowSize)")),Object(i.b)("h4",{id:"parameters"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"game"),": Your ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/top-level-game"}),"Top-Level Game")," Sprite called with its props passed in, e.g. ",Object(i.b)("inlineCode",{parentName:"li"},"Game(gameProps)"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"loadingTextures"),": (Optional) An array of textures to show while the game is loading."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"assets"),": (Optional) An object containing image and audio file names to load."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dimensions"),": (Optional) A string that is either:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"game-coords"'),": (default) Use the game coordinates as pixels in the browser."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"scale-up"'),": Scales the game so that it fills up the browser window."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"nativeSpriteMap"),": (Optional) A map of ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/native-sprites"}),"Native Sprite")," names and their web implementation."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"canvas"),": (Optional) A canvas element to render to. If omitted, Replay will create a canvas in the document."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"windowSize"),": (Optional) An object with width and height fields. Use to override the view size, instead of using the window size.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { renderCanvas } from "@replay/web";\nimport { t } from "@replay/core";\nimport { Game, gameProps } from "../src";\n\nconst loadingTextures = [\n  t.text({\n    color: "black",\n    text: "Loading...",\n  }),\n];\n\nrenderCanvas(\n  Game(gameProps),\n  loadingTextures,\n  {\n    imageFileNames: ["player.png"],\n    audioFileNames: ["shoot.wav"],\n  },\n  "scale-up"\n);\n')),Object(i.b)("h3",{id:"mapinputcoordinatesgetlocalcoords-inputs"},Object(i.b)("inlineCode",{parentName:"h3"},"mapInputCoordinates(getLocalCoords, inputs)")),Object(i.b)("p",null,"This can be used by ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/test"}),"Replay Test"),", see the docs there for more info."),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"device.inputs")," parameter of Sprite methods is of type:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"type WebInputs = {\n  keysDown: KeysPressed;\n  keysJustPressed: KeysPressed;\n  pointer: {\n    pressed: boolean;\n    justPressed: boolean;\n    justReleased: boolean;\n    x: number;\n    y: number;\n  };\n};\n\ntype KeysPressed = {\n  [key: string]: true | undefined;\n};\n")),Object(i.b)("p",null,"The keys of ",Object(i.b)("inlineCode",{parentName:"p"},"KeysPressed")," are based on the ",Object(i.b)("inlineCode",{parentName:"p"},"key")," value of browser keyboard events. See ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://keycode.info"}),"keycode.info")," for values of ",Object(i.b)("inlineCode",{parentName:"p"},"event.key"),"."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"justPressed")," is only ",Object(i.b)("inlineCode",{parentName:"p"},"true")," for one frame after an input is pressed, ",Object(i.b)("inlineCode",{parentName:"p"},"justReleased")," for one frame after an input is released."),Object(i.b)("h4",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'  loop({ device, state }) {\n    let { x } = state;\n    // Move when space bar is down\n    if (device.inputs.keysDown[" "]) {\n      x += 5;\n    }\n    return { ...state, x };\n  },\n')))}c.isMDXComponent=!0},221:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),c=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},b=function(e){var t=c(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=c(n),u=a,m=b["".concat(o,".").concat(u)]||b[u]||d[u]||i;return n?r.a.createElement(m,s({ref:t},p,{components:n})):r.a.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);